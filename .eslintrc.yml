parser: 'babel-eslint'

globals:
    PRODUCTION: false
    FileReader: false

ecmaFeatures:
    modules: true
    jsx: true

parserOptions:
    ecmaFeatures:
        jsx: true

env:
    browser: true
    es6: true
    jest: true
    node: true

plugins: ['react', 'react-hooks']

rules:
    camelcase: [2, { 'properties': 'never' }]
    curly: [2, 'multi-line']
    dot-notation: 0
    eqeqeq: [2, 'allow-null']
    guard-for-in: 2
    no-bitwise: 2
    no-dupe-keys: 2
    no-shadow: 2
    no-undef: 2
    no-underscore-dangle: 0
    no-unused-vars:
        [
            1,
            {
                vars: 'all',
                args: 'none',
                varsIgnorePattern: '^_',
                argsIgnorePattern: '^_',
            },
        ]
    no-use-before-define: [2, 'nofunc']
    no-var: 2
    strict: [2, 'never']
    wrap-iife: [2, 'inside']

    #====================================
    # eslint-plugin-react
    #------------------------------------
    react/jsx-boolean-value: [1, 'never']
    react/jsx-no-duplicate-props: [2, { ignoreCase: true }]
    react/jsx-no-undef: 1
    react/jsx-uses-react: 1
    react/jsx-uses-vars: 1
    react/no-array-index-key: 2
    react/no-did-mount-set-state: 2
    react/no-did-update-set-state: 2
    react/no-multi-comp: 1
    react/no-string-refs: 2
    react/no-unknown-property: 1
    react/no-unused-prop-types:
        [2, { customValidators: [], skipShapeProps: true }]
    # react/prefer-es6-class: 2 # implement ASAP, after code conversion
    react/prop-types: [2, { ignore: ['nion'], customValidators: [] }]
    react/react-in-jsx-scope: 1
    react/require-render-return: 2
    react/self-closing-comp: 1
    react/jsx-wrap-multilines:
        ['error', { 'declaration': false, 'assignment': false }]
    react-hooks/rules-of-hooks: 'error'
    react-hooks/exhaustive-deps: 'error'
